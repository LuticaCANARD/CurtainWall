<div class="input-group">
    <input type="number" value="@year" @onchange="@((ny)=>{CheckVaildYear((int)(ny.Value ?? '0'));})" />
    <input type="number" value="@month" @onchange="@((nm)=>{CheckVaildMonth((int) (nm.Value ?? '0'));})" />
    <input type="number" value="@day" @onchange="@((nd)=>{CheckVaildDay((int) (nd.Value ?? '0'));})"/>
</div>

@code {

    private int year;
    private int month;
    private int day;

    protected override void OnInitialized()
    {

    }
    protected override void OnAfterRender(bool firstRender)
    {

    }
    private void CheckVaildDay(int a)
    {
        CheckVaildMonth(month);
        if(a > DateTime.DaysInMonth(year, month))
        {
            a = 1;
        }
        else if(a < 1)
        {
            month--;
            CheckVaildMonth(month);
            a = DateTime.DaysInMonth(year, month);
        }

        if (MaxDate != null && year == MaxDate.Value.Year && month == MaxDate.Value.Month && a > MaxDate.Value.Day)
        {
            a = MaxDate.Value.Day;
        }
        day = a;
    }
    private void CheckVaildMonth(int mm)
    {
        if(mm > 12)
        {
            CheckVaildYear(year);
            year++;
            mm = 12;
        }
        else if(mm < 1)
        {
            CheckVaildYear(year);
            year--;
            mm = 12;
		}

        if(MaxDate != null && year == MaxDate.Value.Year && month > MaxDate.Value.Month)
		{
			mm = MaxDate.Value.Month;
		}
        month = mm;
    }

    private void CheckVaildYear(int ny)
    {
        year = ny;
        if(year < 1)
		{
			year = 1;
		}
        if (MaxDate == null) 
            return;
        if (year > MaxDate.Value.Year)
        {
            year = MaxDate.Value.Year;
        }

        return;
    }
    public DateOnly GetDateOfThisComponent() => new DateOnly(year, month, day);

    [Parameter]
    public DateTime? MaxDate { get; set; } = null;

}
